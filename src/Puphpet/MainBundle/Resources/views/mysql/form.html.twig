{% set selectedVersion = (mysql.settings.version is defined and mysql.settings.version)
    ? mysql.settings.version
    : false %}
{% set versions = selectedVersion
    ? merge_unique([selectedVersion], mysql.available.versions)
    : mysql.available.versions %}

<input type="hidden" name="mysql[install]" value="0" />

<div class="section-header hidden">
    <h1>MySQL</h1>
    <p class="lead">Install MySQL and create users and databases.</p>
</div>

<div class="form-group">
    <label class="col-xs-12 radio-tile">
        <input type="checkbox" name="mysql[install]" value="1"
               class="invisible toggle-on-select update-other-input-on-check"
               {% if mysql.install %}checked{% endif %}
               data-vis-toggle-target="#mysql-container" />
        <span class="content">
            <span class="header large">
                <i class="icon"></i>
                <span class="title">Install MySQL</span>
            </span>
            <span class="footer">
                The world's most popular open source database.
            </span>
        </span>
    </label>

    <div class="clearfix"></div>
</div>

<div class="clearfix"></div>

<div id="mysql-container" class="{% if not mysql.install %}hidden{% endif %}">
    <div class="form-group col-xs-6">
        <div class="clearfix"><label>Version</label></div>

        {% for version in versions %}
            <label class="radio-tile mini set-width">
                <input type="radio" class="invisible"
                       name="mysql[settings][version]"
                       value="{{ version }}"
                       {% if version == selectedVersion %}checked{% endif %} />
                <span class="content">
                    <span class="header">
                        <i class="icon"></i>
                        <span class="title">{{ version }}</span>
                    </span>
                </span>
            </label>

            {% if loop.index is even or loop.last %}
                <div class="clearfix"></div>
            {% endif %}
        {% endfor %}
    </div>

    <div class="form-group col-xs-6">
        <div class="help-text">
            Assign a password to the root user.
            <strong>Database will only be installed
            when a password is entered here.</strong>
        </div>
        <label for="mysql-settings-root_password">Root Password</label>
        <input type="text" id="mysql-settings-root_password"
               name="mysql[settings][root_password]"
               placeholder="/path/to/your/web/files" class="form-control"
               value="{{ mysql.settings.root_password }}" />
    </div>

    <div class="clearfix"></div>

    <div class="form-group col-xs-12">
        <div class="clearfix"><label>Adminer</label></div>

        <label class="radio-tile mini set-width">
            <span class="help-text">
                It is highly recommended <strong>not</strong> installing Adminer
                on production servers.
                <br /><br />
                If installed it will be available from
                <code>http://{SERVER_IP_ADDRESS}/adminer</code>.
            </span>
            <input type="checkbox" name="mysql[adminer]"
                   class="invisible"
                   {% if mysql.adminer %}checked{% endif %}
                   value="1" />
            <span class="content">
                <span class="header">
                    <i class="icon"></i>
                    <span class="title">Install Adminer</span>
                </span>
            </span>
        </label>
    </div>

    <div class="help-block">
        <p>The preferred way to connect to your database is using a dedicated
            application like
            <a href="http://www.sequelpro.com/" target="_blank">Sequel Pro (OS X)</a>,
            <a href="http://www.heidisql.com/" target="_blank">HeidiSQL (Windows)</a>, and
            <a href="http://dev.mysql.com/downloads/tools/workbench/"
               target="_blank">MySQL Workbench (Cross Platform)</a>.</p>
        <p>Connect using SSH tunnel, username <code>vagrant</code> and SSH key generated at
            <code>puphpet/files/dot/ssh/id_rsa</code>. This key is generated <strong>after</strong>
            your initial <code>$ vagrant up</code>!</p>
    </div>

    <div class="clearfix"></div>

    {% for user in mysql.users %}
        {% include 'PuphpetMainBundle:mysql/sections:user.html.twig' with {'user': user} %}
    {% endfor %}

    <a href="#" data-source-url="{{ path('puphpet.mysql.add_user') }}"
       class="add-block"><i class="fa fa-level-up fa-rotate-90"></i> Add another user</a>

    {% for database in mysql.databases %}
        {% include 'PuphpetMainBundle:mysql/sections:database.html.twig' with {'database': database} %}
    {% endfor %}

    <a href="#" data-source-url="{{ path('puphpet.mysql.add_database') }}"
       class="add-block"><i class="fa fa-level-up fa-rotate-90"></i> Add another database</a>

    {% for grant in mysql.grants %}
        {% include 'PuphpetMainBundle:mysql/sections:grant.html.twig' with {
            'available_privileges': mysql.available.privileges, 'grant': grant} %}
    {% endfor %}

    <a href="#" data-source-url="{{ path('puphpet.mysql.add_grant') }}"
       class="add-block"><i class="fa fa-level-up fa-rotate-90"></i> Add another grant</a>
</div>
