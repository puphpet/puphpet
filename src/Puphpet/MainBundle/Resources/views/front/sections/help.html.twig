<div class="tab-pane" id="help">
    <div class="section-header hidden">
        <h1>Some FAQs</h1>
        <p class="lead">¡Ay, caramba! <small>¡No me gusta!</small></p>
    </div>

    <h3>How do you pronounce PuPHPet?</h3>

    <p>The <em>p</em> is silent.</p>

    <h3>What do I need to get started with PuPHPet?</h3>

    <p>There are a few pre-requisites before you can begin your virtualized journey.</p>

    <p>First, you must install the necessary tools. They're easy to get and will only take a minute:</p>

    <ul>
        <li><a href="https://www.virtualbox.org/wiki/Downloads" target="_blank">VirtualBox</a></li>
        <li><a href="http://www.vagrantup.com/downloads.html" target="_blank">Vagrant</a></li>
    </ul>

    <p>Second … well, that's all you need, really.</p>

    <h3>I downloaded the zip file, now what?</h3>

    <p>
        Using the terminal, or cmd line, <code>cd</code> into your extracted directory and run
        <code>$ vagrant up</code>. This will kick-off the initial process.
    </p>

    <p>
        Vagrant will download the box file, which can take a few minutes. It will only have to do this
        once, even if you create separate environments later on.
    </p>

    <p>
        Then, it will hand control over to Puppet which will begin setting up your environment by installing
        required packages and configuring tools as desired.
    </p>

    <p>
        You will then be able to ssh into your new box with <code>$ vagrant ssh</code>. You can also
        access any virtual hosts you created by editing your hosts file and creating entries for the Box
        IP Address and Server Name you provided during configuration
        (ex: <code>192.168.56.101 puphpet.dev www.puphpet.dev</code>). To shut down the VM, simply run
        <code>$ vagrant halt</code>. To start it back up run <code>$ vagrant up</code> again. Destroy it
        with <code>$ vagrant destroy</code>.
    </p>

    <h3>Further customizations with common.yaml</h3>

    <p>
        I have completely rewritten PuPHPet to take advantage of a built-in configuration tool for Puppet
        called Hiera. Simply look inside your downloaded folder and open
        <code>puppet/hieradata/common.yaml</code>. This is the magical file that controls
        <strong>everything</strong>!
    </p>

    <p>
        For example, if you want to have more OS-level packages installed
        (like <code>vim</code>, <code>curl</code>, <code>git</code>, etc) simply
        add more packages to <code>server.packages</code>. The exact same process exists for
        <code>apache.modules</code>.
    </p>

    <p>
        To create a new Apache or Nginx vhost, simply copy/paste the one you may have created and customize
        to your needs.
    </p>

    <p>
        <strong>Attention</strong>: if you see some sections with non-sensical array keys
        (ex: <em>rIreAN33ne2a</em>) that means they have to be unique! If you copy/paste to add new settings,
        <strong>you must ensure you change this unique key to some other random string</strong>! Bad
        Things Will Happen if you don't.
    </p>

    <h3>Learn you some Vagrant</h3>

    <p>
        You may want to learn the basics of Vagrant CLI by
        <a href="http://docs.vagrantup.com/v2/cli/index.html" target="_blank">going here</a>.
        You really only need to learn the very basics - that is what I created this app for!
    </p>

    <h3 id="update-my-hosts-file">How do I update my hosts file?</h3>

    <p>
        You will need to open and edit your hosts file with a text editor like notepad, sublime_text, nano, etc.
        The location of the hosts file varies by operation system.
    </p>

    <p>
        Windows users could look here: <code>c:\windows\system32\drivers\etc\hosts</code>
    </p>

    <p>
        Linux and Mac OSX users could look here: <code>/etc/hosts</code>.
    </p>

    <p>
        Example Entry: <code>192.168.56.101 puphpet.dev www.puphpet.dev</code>
    </p>
</div>
